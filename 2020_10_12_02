class Node:
    def __init__(self, d):
        self.next = None
        self.data = d
class Stack:
    def __init__(self):
        self.head = None;
    def push(self, d):
        if self.head == None:
            self.head = Node(d)
        else:
            temp = Node(d)
            temp.next = self.head
            self.head = temp
    def pop(self):
        self.head = self.head.next
    def reverse(self):
        prev = curr = self.head
        curr = curr.next
        prev.next = None
        while curr:
            succ = curr.next
            curr.next = prev
            prev = curr
            curr = succ
        self.head = prev
    def printStack(self):
        temp = self.head
        while(temp):
            print(temp.data, end = " ")
            temp = temp.next
s = Stack()
s.push(1)
s.push(2)
s.push(3)
s.push(4)
s.printStack()
s.reverse()
print()
s.printStack()

'''
Reverse a stack without using extra space in O(n)
Reverse a Stack without using recursion and extra space. Even the functional Stack is not allowed.
Examples:
Input : 1->2->3->4
Output : 4->3->2->1
Input :  6->5->4
Output : 4->5->6

'''
