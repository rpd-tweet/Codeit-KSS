def ZigZagTrav(mat):    
    r, c = 0, 0
    rLen = len(mat) - 1
    cLen = len(mat[0]) - 1
    down = True
    res = []
    while r > -1 and c > -1 and r < rLen+1 and c < cLen+1:
      res.append(mat[r][c])
      if down:
        if c == 0 or r == cLen :
          down = False
          if r == rLen:
            c += 1
          else:
            r += 1
        else:
          r += 1
          c -= 1
      else:
        if r == 0 or c == rLen:
          down = True
          if c == cLen:
            r += 1
          else:
            c += 1
        else:
          r -= 1
          c += 1
    return res


mat = [[1, 3, 4, 10], [2, 5, 9, 11], [6, 8, 12, 15], [7, 13, 14, 16] ] 
print(ZigZagTrav(mat))
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Problem 2 : Zigzag Traverse
Problem Statement
Write a function that takes in a two-dimensional array and returns a one-dimensional array of all the array's elements in zigzag order. Zigzag order starts at the top left corner of the two-dimensional array, goes down by one element, and proceeds in a zigzag pattern all the way to the bottom right corner.
Sample input: [ [1, 3, 4, 10], [2, 5, 9, 11], [6, 8, 12, 15], [7, 13, 14, 16]] Sample output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
